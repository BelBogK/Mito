// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mitto.DataLayer;

namespace Mitto.DataLayer.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Mitto.Model.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.HasIndex("CurrencyID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Mitto.Model.Currency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsPrime")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Mitto.Model.CurrencyExchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CurrencyID")
                        .HasColumnType("int");

                    b.Property<int>("CurrenyID")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyID");

                    b.ToTable("CurrencyExchanges");
                });

            modelBuilder.Entity("Mitto.Model.MobilePartnersInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<int>("MobileCountryCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryID");

                    b.ToTable("MobilePartnersInfos");
                });

            modelBuilder.Entity("Mitto.Model.MobilePriceInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MobilePartnersInfoID")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerSMS")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ID");

                    b.HasIndex("MobilePartnersInfoID");

                    b.ToTable("MobilePriceInfos");
                });

            modelBuilder.Entity("Mitto.Model.SMS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("From")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MobileCountryCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sended")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("To")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("SMSs");
                });

            modelBuilder.Entity("Mitto.Model.SMSPrices", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ID");

                    b.ToTable("SMSPricess");
                });

            modelBuilder.Entity("Mitto.Model.Country", b =>
                {
                    b.HasOne("Mitto.Model.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");
                });

            modelBuilder.Entity("Mitto.Model.CurrencyExchange", b =>
                {
                    b.HasOne("Mitto.Model.Currency", "Currency")
                        .WithMany("CurrencyExchanges")
                        .HasForeignKey("CurrencyID");
                });

            modelBuilder.Entity("Mitto.Model.MobilePartnersInfo", b =>
                {
                    b.HasOne("Mitto.Model.Country", null)
                        .WithMany("MobilePartnersInfos")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mitto.Model.MobilePriceInfo", b =>
                {
                    b.HasOne("Mitto.Model.MobilePartnersInfo", "MobilePartnersInfo")
                        .WithMany("PricesForMessage")
                        .HasForeignKey("MobilePartnersInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
